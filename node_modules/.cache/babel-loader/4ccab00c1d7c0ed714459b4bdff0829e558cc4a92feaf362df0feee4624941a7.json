{"ast":null,"code":"var _jsxFileName = \"/Users/chikallo/Documents/game projects/flappybird/src/App.js\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\n//import './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BIRD_SIZE = 20;\nconst GAME_WIDTH = 500;\nconst GAME_HEIGHT = 500;\nconst GRAVITY = 3;\nconst JUMP_HEIGHT = 50;\nfunction App() {\n  _s();\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [gameHasStarted, setGameHasStarted] = useState(false);\n  useEffect(() => {\n    let timeId;\n    if (birdPosition < GAME_HEIGHT - BIRD_SIZE) {\n      timeId = setInterval(() => {\n        setBirdPosition(birdPosition => birdPosition + GRAVITY);\n      }, 24);\n    }\n    return () => {\n      clearInterval(timeId);\n    };\n  });\n  const handleClick = () => {\n    let newBirdPosition = birdPosition - JUMP_HEIGHT;\n    if (!gameHasStarted) {\n      setGameHasStarted(true);\n    } else if (newBirdPosition < 0) {\n      setBirdPosition(0);\n    } else {\n      setBirdPosition(newBirdPosition);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Div, {\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(GameBox, {\n      height: GAME_HEIGHT,\n      width: GAME_WIDTH,\n      children: /*#__PURE__*/_jsxDEV(Bird, {\n        size: BIRD_SIZE,\n        top: birdPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pj0i+uqz8rqIVwfNDCih6cQ8ouA=\");\n_c = App;\nexport default App;\nconst Bird = styled.div`\nposition: absolute;\nbackground-color: red;\nheight: ${props => props.size}px;\nwidth: ${props => props.size}px;\ntop: ${props => props.top}px;\nborder-radius: 50%;\n`;\n_c2 = Bird;\nconst Div = styled.div`\ndisplay: flux;\nwidth: 100%;\njustify-content: center;\n`;\n_c3 = Div;\nconst GameBox = styled.div`\nheight: ${props => props.height}px;\nwidth: ${props => props.width}px;\nbackground-color: blue;\n`;\n_c4 = GameBox;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Bird\");\n$RefreshReg$(_c3, \"Div\");\n$RefreshReg$(_c4, \"GameBox\");","map":{"version":3,"names":["styled","useEffect","useState","BIRD_SIZE","GAME_WIDTH","GAME_HEIGHT","GRAVITY","JUMP_HEIGHT","App","birdPosition","setBirdPosition","gameHasStarted","setGameHasStarted","timeId","setInterval","clearInterval","handleClick","newBirdPosition","Bird","div","props","size","top","Div","GameBox","height","width"],"sources":["/Users/chikallo/Documents/game projects/flappybird/src/App.js"],"sourcesContent":["import styled from 'styled-components';\nimport { useEffect, useState } from 'react';\n//import './App.css';\n\nconst BIRD_SIZE =20;\nconst GAME_WIDTH = 500;\nconst GAME_HEIGHT = 500;\nconst GRAVITY = 3;\nconst JUMP_HEIGHT = 50;\n\nfunction App() {\n  const [birdPosition, setBirdPosition] = useState(250);\n  const [gameHasStarted, setGameHasStarted] = useState(false)\n\n  useEffect(() => {\n    let timeId;\n    if (birdPosition < GAME_HEIGHT - BIRD_SIZE) {\n     timeId = setInterval(() => {\n        setBirdPosition(birdPosition => birdPosition + GRAVITY)\n      }, 24);\n    }\n    return () => {\n      clearInterval(timeId);\n    }\n  });\n\n  const handleClick = () => {\n    let newBirdPosition = birdPosition - JUMP_HEIGHT;\n    if (!gameHasStarted) {\n      setGameHasStarted(true);\n    } else if (newBirdPosition < 0) {\n      setBirdPosition(0)\n    } else {\n      setBirdPosition(newBirdPosition)\n    }\n  }\n\n  return (\n    <Div onClick={handleClick}>\n      <GameBox height={GAME_HEIGHT} width={GAME_WIDTH}>\n        <Bird size={BIRD_SIZE} top={birdPosition} />\n      </GameBox>\n    </Div>\n  );\n}\n\nexport default App;\n\nconst Bird = styled.div`\nposition: absolute;\nbackground-color: red;\nheight: ${(props) => props.size}px;\nwidth: ${(props) => props.size}px;\ntop: ${(props) => props.top}px;\nborder-radius: 50%;\n`;\n\nconst Div = styled.div`\ndisplay: flux;\nwidth: 100%;\njustify-content: center;\n`;\n\nconst GameBox = styled.div`\nheight: ${(props) => props.height}px;\nwidth: ${(props) => props.width}px;\nbackground-color: blue;\n`;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA;AAEA,MAAMC,SAAS,GAAE,EAAE;AACnB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,WAAW,GAAG,GAAG;AACvB,MAAMC,OAAO,GAAG,CAAC;AACjB,MAAMC,WAAW,GAAG,EAAE;AAEtB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM;IACV,IAAIJ,YAAY,GAAGJ,WAAW,GAAGF,SAAS,EAAE;MAC3CU,MAAM,GAAGC,WAAW,CAAC,MAAM;QACxBJ,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGH,OAAO,CAAC;MACzD,CAAC,EAAE,EAAE,CAAC;IACR;IACA,OAAO,MAAM;MACXS,aAAa,CAACF,MAAM,CAAC;IACvB,CAAC;EACH,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAG,MAAM;IACxB,IAAIC,eAAe,GAAGR,YAAY,GAAGF,WAAW;IAChD,IAAI,CAACI,cAAc,EAAE;MACnBC,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM,IAAIK,eAAe,GAAG,CAAC,EAAE;MAC9BP,eAAe,CAAC,CAAC,CAAC;IACpB,CAAC,MAAM;MACLA,eAAe,CAACO,eAAe,CAAC;IAClC;EACF,CAAC;EAED,oBACE,QAAC,GAAG;IAAC,OAAO,EAAED,WAAY;IAAA,uBACxB,QAAC,OAAO;MAAC,MAAM,EAAEX,WAAY;MAAC,KAAK,EAAED,UAAW;MAAA,uBAC9C,QAAC,IAAI;QAAC,IAAI,EAAED,SAAU;QAAC,GAAG,EAAEM;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACpC;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAlCQD,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAElB,MAAMU,IAAI,GAAGlB,MAAM,CAACmB,GAAI;AACxB;AACA;AACA,UAAWC,KAAK,IAAKA,KAAK,CAACC,IAAK;AAChC,SAAUD,KAAK,IAAKA,KAAK,CAACC,IAAK;AAC/B,OAAQD,KAAK,IAAKA,KAAK,CAACE,GAAI;AAC5B;AACA,CAAC;AAAC,MAPIJ,IAAI;AASV,MAAMK,GAAG,GAAGvB,MAAM,CAACmB,GAAI;AACvB;AACA;AACA;AACA,CAAC;AAAC,MAJII,GAAG;AAMT,MAAMC,OAAO,GAAGxB,MAAM,CAACmB,GAAI;AAC3B,UAAWC,KAAK,IAAKA,KAAK,CAACK,MAAO;AAClC,SAAUL,KAAK,IAAKA,KAAK,CAACM,KAAM;AAChC;AACA,CAAC;AAAC,MAJIF,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}